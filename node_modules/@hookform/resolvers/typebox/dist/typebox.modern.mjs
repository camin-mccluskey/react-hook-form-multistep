import{appendErrors as e}from"react-hook-form";import{validateFieldsNatively as r,toNestError as o}from"@hookform/resolvers";import{Value as s}from"@sinclair/typebox/value";const t=(r,o)=>{const s={};for(;r.length;){const t=r[0],{type:a,message:i,path:n}=t,l=n.substring(1).replace(/\//g,".");if(s[l]||(s[l]={message:i,type:""+a}),o){const r=s[l].types,i=r&&r[""+a];s[l]=e(l,o,s,""+a,i?[].concat(i,t.message):t.message)}r.shift()}return s},a=e=>async(a,i,n)=>{const l=[...s.Errors(e,a)];return n.shouldUseNativeValidation&&r({},n),l.length?{values:{},errors:o(t(l,!n.shouldUseNativeValidation&&"all"===n.criteriaMode),n)}:{errors:{},values:a}};export{a as typeboxResolver};
//# sourceMappingURL=typebox.modern.mjs.map
